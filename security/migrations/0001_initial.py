# Generated by Django 4.2.7 on 2025-07-18 10:33

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='VulnerabilityAssessment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('scan_type', models.CharField(choices=[('network', 'Network Scan'), ('web_app', 'Web Application Scan'), ('database', 'Database Scan'), ('infrastructure', 'Infrastructure Scan'), ('code', 'Code Analysis'), ('dependency', 'Dependency Scan'), ('configuration', 'Configuration Review'), ('compliance', 'Compliance Scan')], max_length=20)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='scheduled', max_length=15)),
                ('target', models.CharField(max_length=255)),
                ('scan_profile', models.CharField(blank=True, max_length=100)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('duration_seconds', models.IntegerField(blank=True, null=True)),
                ('scanner_tool', models.CharField(max_length=100)),
                ('scanner_version', models.CharField(blank=True, max_length=50)),
                ('scan_config', models.JSONField(default=dict)),
                ('raw_results', models.JSONField(default=dict)),
                ('processed_results', models.JSONField(default=dict)),
                ('total_vulnerabilities', models.IntegerField(default=0)),
                ('critical_count', models.IntegerField(default=0)),
                ('high_count', models.IntegerField(default=0)),
                ('medium_count', models.IntegerField(default=0)),
                ('low_count', models.IntegerField(default=0)),
                ('info_count', models.IntegerField(default=0)),
                ('false_positive_count', models.IntegerField(default=0)),
                ('report_file_path', models.CharField(blank=True, max_length=500)),
                ('initiated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Vulnerability Assessment',
                'verbose_name_plural': 'Vulnerability Assessments',
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='Vulnerability',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('cve_id', models.CharField(blank=True, max_length=20)),
                ('cwe_id', models.CharField(blank=True, max_length=10)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('severity', models.CharField(choices=[('info', 'Informational'), ('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=10)),
                ('cvss_score', models.FloatField(blank=True, null=True)),
                ('cvss_vector', models.CharField(blank=True, max_length=100)),
                ('status', models.CharField(choices=[('open', 'Open'), ('in_progress', 'In Progress'), ('fixed', 'Fixed'), ('accepted_risk', 'Accepted Risk'), ('false_positive', 'False Positive'), ('wont_fix', "Won't Fix"), ('duplicate', 'Duplicate')], default='open', max_length=20)),
                ('affected_component', models.CharField(max_length=255)),
                ('location', models.CharField(max_length=500)),
                ('proof_of_concept', models.TextField(blank=True)),
                ('remediation_advice', models.TextField(blank=True)),
                ('references', models.JSONField(default=list)),
                ('first_discovered', models.DateTimeField(auto_now_add=True)),
                ('last_seen', models.DateTimeField(auto_now=True)),
                ('fixed_at', models.DateTimeField(blank=True, null=True)),
                ('risk_rating', models.CharField(blank=True, max_length=10)),
                ('exploitability', models.CharField(blank=True, max_length=10)),
                ('asset_criticality', models.CharField(blank=True, max_length=10)),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vulnerabilities', to='security.vulnerabilityassessment')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Vulnerability',
                'verbose_name_plural': 'Vulnerabilities',
                'ordering': ['-cvss_score', '-first_discovered'],
            },
        ),
        migrations.CreateModel(
            name='SecurityThreat',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('threat_type', models.CharField(choices=[('malware', 'Malware Detection'), ('intrusion', 'System Intrusion'), ('data_breach', 'Data Breach'), ('privilege_escalation', 'Privilege Escalation'), ('brute_force', 'Brute Force Attack'), ('ddos', 'DDoS Attack'), ('sql_injection', 'SQL Injection'), ('xss', 'Cross-Site Scripting'), ('csrf', 'Cross-Site Request Forgery'), ('unauthorized_access', 'Unauthorized Access'), ('suspicious_activity', 'Suspicious Activity'), ('vulnerability_exploit', 'Vulnerability Exploitation'), ('insider_threat', 'Insider Threat'), ('phishing', 'Phishing Attempt'), ('ransomware', 'Ransomware')], max_length=30)),
                ('severity', models.CharField(choices=[('info', 'Informational'), ('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=10)),
                ('status', models.CharField(choices=[('detected', 'Detected'), ('investigating', 'Under Investigation'), ('contained', 'Contained'), ('mitigated', 'Mitigated'), ('resolved', 'Resolved'), ('false_positive', 'False Positive')], default='detected', max_length=20)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('source_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('target_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('detection_time', models.DateTimeField(auto_now_add=True)),
                ('first_seen', models.DateTimeField(blank=True, null=True)),
                ('last_seen', models.DateTimeField(blank=True, null=True)),
                ('detection_source', models.CharField(max_length=100)),
                ('threat_indicators', models.JSONField(default=dict)),
                ('response_actions', models.JSONField(default=list)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('resolution_notes', models.TextField(blank=True)),
                ('affected_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='security_threats', to=settings.AUTH_USER_MODEL)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_threats', to=settings.AUTH_USER_MODEL)),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_threats', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Security Threat',
                'verbose_name_plural': 'Security Threats',
                'ordering': ['-detection_time'],
            },
        ),
        migrations.CreateModel(
            name='SecurityIncident',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('incident_id', models.CharField(max_length=50, unique=True)),
                ('incident_type', models.CharField(choices=[('data_breach', 'Data Breach'), ('system_compromise', 'System Compromise'), ('malware_infection', 'Malware Infection'), ('phishing_attack', 'Phishing Attack'), ('insider_threat', 'Insider Threat'), ('ddos_attack', 'DDoS Attack'), ('unauthorized_access', 'Unauthorized Access'), ('policy_violation', 'Policy Violation'), ('physical_security', 'Physical Security'), ('other', 'Other')], max_length=25)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=10)),
                ('status', models.CharField(choices=[('reported', 'Reported'), ('acknowledged', 'Acknowledged'), ('investigating', 'Under Investigation'), ('containment', 'Containment'), ('eradication', 'Eradication'), ('recovery', 'Recovery'), ('post_incident', 'Post-Incident Analysis'), ('closed', 'Closed')], default='reported', max_length=20)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('discovered_at', models.DateTimeField()),
                ('reported_at', models.DateTimeField(auto_now_add=True)),
                ('affected_systems', models.JSONField(default=list)),
                ('impact_assessment', models.TextField(blank=True)),
                ('containment_actions', models.TextField(blank=True)),
                ('eradication_actions', models.TextField(blank=True)),
                ('recovery_actions', models.TextField(blank=True)),
                ('lessons_learned', models.TextField(blank=True)),
                ('closed_at', models.DateTimeField(blank=True, null=True)),
                ('affected_users', models.ManyToManyField(blank=True, related_name='security_incidents', to=settings.AUTH_USER_MODEL)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_incidents', to=settings.AUTH_USER_MODEL)),
                ('related_threats', models.ManyToManyField(blank=True, to='security.securitythreat')),
                ('related_vulnerabilities', models.ManyToManyField(blank=True, to='security.vulnerability')),
                ('reported_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reported_incidents', to=settings.AUTH_USER_MODEL)),
                ('team_members', models.ManyToManyField(blank=True, related_name='incident_team_memberships', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Security Incident',
                'verbose_name_plural': 'Security Incidents',
                'ordering': ['-reported_at'],
            },
        ),
        migrations.CreateModel(
            name='SecurityConfiguration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('config_type', models.CharField(choices=[('firewall', 'Firewall Rules'), ('ids_ips', 'IDS/IPS Settings'), ('antivirus', 'Antivirus Configuration'), ('backup', 'Backup Settings'), ('monitoring', 'Monitoring Configuration'), ('access_control', 'Access Control'), ('encryption', 'Encryption Settings'), ('logging', 'Logging Configuration')], max_length=20)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('configuration', models.JSONField(default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Security Configuration',
                'verbose_name_plural': 'Security Configurations',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='NetworkMonitor',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('alert_type', models.CharField(choices=[('suspicious_traffic', 'Suspicious Traffic'), ('bandwidth_anomaly', 'Bandwidth Anomaly'), ('unauthorized_access', 'Unauthorized Access'), ('port_scan', 'Port Scan'), ('malicious_ip', 'Malicious IP'), ('dns_anomaly', 'DNS Anomaly'), ('connection_anomaly', 'Connection Anomaly'), ('failed_connection', 'Failed Connection')], max_length=25)),
                ('source_ip', models.GenericIPAddressField()),
                ('destination_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('source_port', models.IntegerField(blank=True, null=True)),
                ('destination_port', models.IntegerField(blank=True, null=True)),
                ('protocol', models.CharField(blank=True, max_length=10)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('severity', models.CharField(choices=[('info', 'Informational'), ('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=10)),
                ('description', models.TextField()),
                ('raw_data', models.JSONField(default=dict)),
                ('geographic_info', models.JSONField(default=dict)),
                ('threat_intelligence', models.JSONField(default=dict)),
                ('is_false_positive', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Network Monitor Alert',
                'verbose_name_plural': 'Network Monitor Alerts',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['alert_type'], name='security_ne_alert_t_ecfedc_idx'), models.Index(fields=['source_ip'], name='security_ne_source__aa59b4_idx'), models.Index(fields=['timestamp'], name='security_ne_timesta_311051_idx'), models.Index(fields=['severity'], name='security_ne_severit_5074cb_idx')],
            },
        ),
        migrations.CreateModel(
            name='FileIntegrityMonitor',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file_path', models.TextField()),
                ('change_type', models.CharField(choices=[('created', 'File Created'), ('modified', 'File Modified'), ('deleted', 'File Deleted'), ('moved', 'File Moved'), ('permissions_changed', 'Permissions Changed'), ('ownership_changed', 'Ownership Changed')], max_length=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('old_checksum', models.CharField(blank=True, max_length=128)),
                ('new_checksum', models.CharField(blank=True, max_length=128)),
                ('old_size', models.BigIntegerField(blank=True, null=True)),
                ('new_size', models.BigIntegerField(blank=True, null=True)),
                ('old_permissions', models.CharField(blank=True, max_length=10)),
                ('new_permissions', models.CharField(blank=True, max_length=10)),
                ('user_context', models.CharField(blank=True, max_length=255)),
                ('process_name', models.CharField(blank=True, max_length=255)),
                ('is_critical_file', models.BooleanField(default=False)),
                ('is_authorized_change', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'File Integrity Monitor',
                'verbose_name_plural': 'File Integrity Monitors',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['file_path'], name='security_fi_file_pa_aa592c_idx'), models.Index(fields=['change_type'], name='security_fi_change__7ac420_idx'), models.Index(fields=['timestamp'], name='security_fi_timesta_881a29_idx'), models.Index(fields=['is_critical_file'], name='security_fi_is_crit_0677d1_idx')],
            },
        ),
        migrations.CreateModel(
            name='ComplianceReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('report_type', models.CharField(choices=[('hipaa', 'HIPAA Compliance'), ('soc2', 'SOC 2 Compliance'), ('gdpr', 'GDPR Compliance'), ('iso27001', 'ISO 27001 Compliance'), ('nist', 'NIST Cybersecurity Framework'), ('custom', 'Custom Compliance')], max_length=15)),
                ('status', models.CharField(choices=[('generating', 'Generating'), ('completed', 'Completed'), ('failed', 'Failed')], default='generating', max_length=15)),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('period_start', models.DateTimeField()),
                ('period_end', models.DateTimeField()),
                ('report_data', models.JSONField(default=dict)),
                ('file_path', models.CharField(blank=True, max_length=500)),
                ('compliance_score', models.FloatField(blank=True, null=True)),
                ('total_controls', models.IntegerField(default=0)),
                ('passed_controls', models.IntegerField(default=0)),
                ('failed_controls', models.IntegerField(default=0)),
                ('generated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Compliance Report',
                'verbose_name_plural': 'Compliance Reports',
                'ordering': ['-generated_at'],
            },
        ),
        migrations.AddIndex(
            model_name='vulnerabilityassessment',
            index=models.Index(fields=['scan_type'], name='security_vu_scan_ty_e21bb7_idx'),
        ),
        migrations.AddIndex(
            model_name='vulnerabilityassessment',
            index=models.Index(fields=['status'], name='security_vu_status_e983c8_idx'),
        ),
        migrations.AddIndex(
            model_name='vulnerabilityassessment',
            index=models.Index(fields=['started_at'], name='security_vu_started_441f6a_idx'),
        ),
        migrations.AddIndex(
            model_name='vulnerabilityassessment',
            index=models.Index(fields=['target'], name='security_vu_target_918025_idx'),
        ),
        migrations.AddIndex(
            model_name='vulnerability',
            index=models.Index(fields=['severity'], name='security_vu_severit_13f2ee_idx'),
        ),
        migrations.AddIndex(
            model_name='vulnerability',
            index=models.Index(fields=['status'], name='security_vu_status_003845_idx'),
        ),
        migrations.AddIndex(
            model_name='vulnerability',
            index=models.Index(fields=['cve_id'], name='security_vu_cve_id_d25b5d_idx'),
        ),
        migrations.AddIndex(
            model_name='vulnerability',
            index=models.Index(fields=['first_discovered'], name='security_vu_first_d_f17677_idx'),
        ),
        migrations.AddIndex(
            model_name='vulnerability',
            index=models.Index(fields=['assessment'], name='security_vu_assessm_4e6cc2_idx'),
        ),
        migrations.AddIndex(
            model_name='securitythreat',
            index=models.Index(fields=['threat_type'], name='security_se_threat__18e166_idx'),
        ),
        migrations.AddIndex(
            model_name='securitythreat',
            index=models.Index(fields=['severity'], name='security_se_severit_4a54c3_idx'),
        ),
        migrations.AddIndex(
            model_name='securitythreat',
            index=models.Index(fields=['status'], name='security_se_status_04a34f_idx'),
        ),
        migrations.AddIndex(
            model_name='securitythreat',
            index=models.Index(fields=['detection_time'], name='security_se_detecti_945c25_idx'),
        ),
        migrations.AddIndex(
            model_name='securitythreat',
            index=models.Index(fields=['source_ip'], name='security_se_source__cebcd5_idx'),
        ),
        migrations.AddIndex(
            model_name='securitythreat',
            index=models.Index(fields=['affected_user'], name='security_se_affecte_b2cc75_idx'),
        ),
        migrations.AddIndex(
            model_name='securityincident',
            index=models.Index(fields=['incident_type'], name='security_se_inciden_ee2707_idx'),
        ),
        migrations.AddIndex(
            model_name='securityincident',
            index=models.Index(fields=['priority'], name='security_se_priorit_79f929_idx'),
        ),
        migrations.AddIndex(
            model_name='securityincident',
            index=models.Index(fields=['status'], name='security_se_status_9d6acf_idx'),
        ),
        migrations.AddIndex(
            model_name='securityincident',
            index=models.Index(fields=['reported_at'], name='security_se_reporte_b7bca8_idx'),
        ),
        migrations.AddIndex(
            model_name='securityincident',
            index=models.Index(fields=['incident_id'], name='security_se_inciden_86b793_idx'),
        ),
        migrations.AddIndex(
            model_name='securityconfiguration',
            index=models.Index(fields=['config_type'], name='security_se_config__99db54_idx'),
        ),
        migrations.AddIndex(
            model_name='securityconfiguration',
            index=models.Index(fields=['is_active'], name='security_se_is_acti_4ba4ed_idx'),
        ),
        migrations.AddIndex(
            model_name='compliancereport',
            index=models.Index(fields=['report_type'], name='security_co_report__878419_idx'),
        ),
        migrations.AddIndex(
            model_name='compliancereport',
            index=models.Index(fields=['generated_at'], name='security_co_generat_f3c818_idx'),
        ),
        migrations.AddIndex(
            model_name='compliancereport',
            index=models.Index(fields=['status'], name='security_co_status_87b164_idx'),
        ),
    ]
