# Generated by Django 4.2.7 on 2025-07-18 10:34

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SecurityAuditLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('failed_login', 'Failed Login'), ('successful_login', 'Successful Login'), ('suspicious_login', 'Suspicious Login'), ('unusual_access', 'Unusual Access Pattern'), ('permission_violation', 'Permission Violation'), ('brute_force_attempt', 'Brute Force Attempt'), ('unusual_activity', 'Unusual Activity'), ('system_error', 'System Error'), ('auth_failure', 'Authentication Failure'), ('auth_success', 'Authentication Success'), ('account_locked', 'Account Locked'), ('data_export', 'Data Export'), ('bulk_access', 'Bulk Data Access'), ('after_hours_access', 'After Hours Access'), ('vip_access', 'VIP Record Access'), ('security_change', 'Security Setting Change'), ('api_key_usage', 'API Key Usage'), ('rapid_access', 'Rapid Access Pattern'), ('unauthorized_access', 'Unauthorized Access'), ('data_breach', 'Data Breach'), ('malware_detected', 'Malware Detected'), ('system_intrusion', 'System Intrusion'), ('privilege_escalation', 'Privilege Escalation'), ('data_exfiltration', 'Data Exfiltration')], db_index=True, max_length=30)),
                ('description', models.TextField()),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], db_index=True, default='medium', max_length=10)),
                ('ip_address', models.GenericIPAddressField(blank=True, db_index=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('additional_data', models.JSONField(blank=True, default=dict)),
                ('resolved', models.BooleanField(db_index=True, default=False)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('resolution_notes', models.TextField(blank=True)),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_security_logs', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='security_audit_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Security Audit Log',
                'verbose_name_plural': 'Security Audit Logs',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['event_type'], name='audit_secur_event_t_b54f0b_idx'), models.Index(fields=['severity'], name='audit_secur_severit_ac6cb9_idx'), models.Index(fields=['resolved'], name='audit_secur_resolve_50e073_idx'), models.Index(fields=['timestamp'], name='audit_secur_timesta_873d0a_idx')],
            },
        ),
        migrations.CreateModel(
            name='PHIAccessLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('access_type', models.CharField(choices=[('view', 'View'), ('modify', 'Modify'), ('export', 'Export'), ('share', 'Share'), ('print', 'Print')], db_index=True, max_length=20)),
                ('reason', models.TextField(help_text='HIPAA requires a documented reason for accessing PHI')),
                ('record_type', models.CharField(db_index=True, max_length=100)),
                ('record_id', models.CharField(db_index=True, max_length=100)),
                ('ip_address', models.GenericIPAddressField(blank=True, db_index=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('additional_data', models.JSONField(blank=True, default=dict)),
                ('patient', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='phi_accessed_logs', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='phi_access_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'PHI Access Log',
                'verbose_name_plural': 'PHI Access Logs',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['access_type'], name='audit_phiac_access__75b314_idx'), models.Index(fields=['user'], name='audit_phiac_user_id_f1ff0d_idx'), models.Index(fields=['patient'], name='audit_phiac_patient_f88437_idx'), models.Index(fields=['timestamp'], name='audit_phiac_timesta_1fc211_idx'), models.Index(fields=['record_type', 'record_id'], name='audit_phiac_record__6cda84_idx')],
            },
        ),
        migrations.CreateModel(
            name='ComplianceReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('report_type', models.CharField(choices=[('daily_audit', 'Daily Audit'), ('phi_access', 'PHI Access'), ('security_incidents', 'Security Incidents'), ('user_activity', 'User Activity'), ('system_access', 'System Access'), ('weekly_audit', 'Weekly Audit'), ('monthly_audit', 'Monthly Audit'), ('quarterly_audit', 'Quarterly Audit'), ('annual_audit', 'Annual Audit'), ('custom', 'Custom Report')], db_index=True, max_length=30)),
                ('report_date', models.DateField(db_index=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], db_index=True, default='pending', max_length=20)),
                ('file_url', models.URLField(blank=True)),
                ('parameters', models.JSONField(blank=True, default=dict)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('generated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='generated_compliance_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Compliance Report',
                'verbose_name_plural': 'Compliance Reports',
                'ordering': ['-report_date'],
                'indexes': [models.Index(fields=['report_type'], name='audit_compl_report__481012_idx'), models.Index(fields=['report_date'], name='audit_compl_report__c62915_idx'), models.Index(fields=['status'], name='audit_compl_status_3f355e_idx'), models.Index(fields=['created_at'], name='audit_compl_created_3db656_idx')],
            },
        ),
        migrations.CreateModel(
            name='AuditExport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], db_index=True, default='pending', max_length=20)),
                ('file_url', models.URLField(blank=True)),
                ('filters', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audit_exports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Audit Export',
                'verbose_name_plural': 'Audit Exports',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['status'], name='audit_audit_status_7cd9d5_idx'), models.Index(fields=['user'], name='audit_audit_user_id_e12858_idx'), models.Index(fields=['created_at'], name='audit_audit_created_830698_idx')],
            },
        ),
        migrations.CreateModel(
            name='AuditEvent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('create', 'Create'), ('read', 'Read'), ('update', 'Update'), ('delete', 'Delete'), ('login', 'Login'), ('logout', 'Logout'), ('access', 'Access'), ('error', 'Error'), ('password_reset', 'Password Reset'), ('account_lockout', 'Account Lockout'), ('permission_change', 'Permission Change'), ('export', 'Export'), ('share', 'Share')], db_index=True, max_length=20)),
                ('resource_type', models.CharField(db_index=True, max_length=100)),
                ('resource_id', models.CharField(blank=True, db_index=True, max_length=100)),
                ('description', models.TextField()),
                ('ip_address', models.GenericIPAddressField(blank=True, db_index=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('additional_data', models.JSONField(blank=True, default=dict)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Audit Event',
                'verbose_name_plural': 'Audit Events',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['event_type'], name='audit_audit_event_t_04511c_idx'), models.Index(fields=['resource_type'], name='audit_audit_resourc_0c5eb7_idx'), models.Index(fields=['user'], name='audit_audit_user_id_c5b9b3_idx'), models.Index(fields=['timestamp'], name='audit_audit_timesta_ee9c56_idx')],
            },
        ),
    ]
