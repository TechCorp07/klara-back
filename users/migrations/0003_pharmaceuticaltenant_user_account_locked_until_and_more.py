# Generated by Django 4.2.7 on 2025-07-14 19:34

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0002_user_profile_image'),
    ]

    operations = [
        migrations.CreateModel(
            name='PharmaceuticalTenant',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('regulatory_id', models.CharField(help_text='FDA or regulatory body ID', max_length=100, unique=True)),
                ('contact_email', models.EmailField(max_length=254)),
                ('primary_therapeutic_areas', models.JSONField(default=list, help_text='List of therapeutic focus areas')),
                ('is_active', models.BooleanField(default=True)),
                ('features_enabled', models.JSONField(default=dict, help_text='Tenant-specific feature flags')),
                ('branding_config', models.JSONField(default=dict, help_text='Custom branding and UI configuration')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_audit_date', models.DateTimeField(blank=True, null=True)),
                ('compliance_status', models.CharField(choices=[('ACTIVE', 'Active'), ('UNDER_REVIEW', 'Under Review'), ('SUSPENDED', 'Suspended'), ('TERMINATED', 'Terminated')], default='ACTIVE', max_length=20)),
            ],
            options={
                'verbose_name': 'Pharmaceutical Tenant',
                'verbose_name_plural': 'Pharmaceutical Tenants',
                'db_table': 'pharmaceutical_tenants',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='account_locked_until',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='failed_login_attempts',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='user',
            name='jwt_secret_version',
            field=models.IntegerField(default=1, help_text='Version for JWT secret rotation'),
        ),
        migrations.AddField(
            model_name='user',
            name='last_token_refresh',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='research_enrollment_date',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='research_participant_id',
            field=models.CharField(blank=True, max_length=100, null=True, unique=True),
        ),
        migrations.AddField(
            model_name='user',
            name='security_questions_set',
            field=models.BooleanField(default=False),
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('session_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('expires_at', models.DateTimeField()),
                ('is_active', models.BooleanField(default=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField()),
                ('device_fingerprint', models.CharField(blank=True, max_length=255, null=True)),
                ('patient_context', models.TextField(blank=True, help_text='Encrypted patient workflow context', null=True)),
                ('clinical_context', models.TextField(blank=True, help_text='Encrypted clinical workflow state', null=True)),
                ('research_context', models.TextField(blank=True, help_text='Encrypted research session context', null=True)),
                ('is_emergency_session', models.BooleanField(default=False)),
                ('emergency_reason', models.CharField(blank=True, max_length=100, null=True)),
                ('emergency_approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_emergency_sessions', to=settings.AUTH_USER_MODEL)),
                ('pharmaceutical_tenant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.pharmaceuticaltenant')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='active_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_sessions',
            },
        ),
        migrations.CreateModel(
            name='ResearchConsent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('study_identifier', models.CharField(help_text='Research study or drug trial identifier', max_length=100)),
                ('consent_type', models.CharField(choices=[('GENERAL_RESEARCH', 'General Research Participation'), ('DRUG_EFFICACY', 'Drug Efficacy Research'), ('FAMILY_HISTORY', 'Family Medical History Research'), ('GENETIC_DATA', 'Genetic Data Research'), ('LONGITUDINAL_STUDY', 'Longitudinal Health Study'), ('ADHERENCE_MONITORING', 'Medication Adherence Monitoring'), ('OUTCOMES_RESEARCH', 'Clinical Outcomes Research'), ('BIOMARKER_RESEARCH', 'Biomarker Research')], max_length=50)),
                ('consented', models.BooleanField(default=False)),
                ('consent_date', models.DateTimeField(blank=True, null=True)),
                ('consent_version', models.CharField(default='1.0', max_length=20)),
                ('withdrawn', models.BooleanField(default=False)),
                ('withdrawal_date', models.DateTimeField(blank=True, null=True)),
                ('withdrawal_reason', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('consent_document_url', models.URLField(blank=True, help_text='Link to signed consent document', null=True)),
                ('inherited_from_family_member', models.ForeignKey(blank=True, help_text='If consent inherited from family member', null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.researchconsent')),
                ('pharmaceutical_tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.pharmaceuticaltenant')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='research_consents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'research_consents',
            },
        ),
        migrations.CreateModel(
            name='RefreshToken',
            fields=[
                ('token_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('token_hash', models.CharField(max_length=255, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('is_revoked', models.BooleanField(default=False)),
                ('rotation_count', models.IntegerField(default=0)),
                ('created_ip', models.GenericIPAddressField()),
                ('last_used_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('previous_token', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.refreshtoken')),
                ('session', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='refresh_token', to='users.usersession')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='refresh_tokens', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'refresh_tokens',
            },
        ),
        migrations.CreateModel(
            name='AuditTrail',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('action_type', models.CharField(choices=[('LOGIN', 'User Login'), ('LOGOUT', 'User Logout'), ('TOKEN_REFRESH', 'Token Refresh'), ('PATIENT_ACCESS', 'Patient Data Access'), ('EHR_ACCESS', 'EHR Data Access'), ('RESEARCH_DATA_ACCESS', 'Research Data Access'), ('CONSENT_GRANTED', 'Research Consent Granted'), ('CONSENT_WITHDRAWN', 'Research Consent Withdrawn'), ('EMERGENCY_ACCESS', 'Emergency Access Used'), ('CROSS_TENANT_ACCESS', 'Cross-Tenant Data Access'), ('DATA_EXPORT', 'Data Export'), ('PERMISSION_CHANGE', 'Permission Modified'), ('SECURITY_EVENT', 'Security Event')], max_length=50)),
                ('resource_type', models.CharField(blank=True, max_length=50, null=True)),
                ('resource_id', models.CharField(blank=True, max_length=255, null=True)),
                ('action_description', models.TextField()),
                ('request_data', models.JSONField(blank=True, help_text='Sanitized request data', null=True)),
                ('response_status', models.CharField(blank=True, max_length=10, null=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField()),
                ('study_identifier', models.CharField(blank=True, max_length=100, null=True)),
                ('patient_identifier', models.CharField(blank=True, max_length=255, null=True)),
                ('research_purpose', models.CharField(blank=True, max_length=255, null=True)),
                ('risk_level', models.CharField(choices=[('LOW', 'Low Risk'), ('MEDIUM', 'Medium Risk'), ('HIGH', 'High Risk'), ('CRITICAL', 'Critical Risk')], default='LOW', max_length=20)),
                ('compliance_flags', models.JSONField(default=list, help_text='Compliance violations or notes')),
                ('pharmaceutical_tenant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.pharmaceuticaltenant')),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.usersession')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'audit_trails',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='pharmaceutical_tenants',
            field=models.ManyToManyField(blank=True, help_text='Pharmaceutical companies this user has access to', related_name='users', to='users.pharmaceuticaltenant'),
        ),
        migrations.AddField(
            model_name='user',
            name='primary_pharmaceutical_tenant',
            field=models.ForeignKey(blank=True, help_text='Primary pharmaceutical tenant for this user', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='primary_users', to='users.pharmaceuticaltenant'),
        ),
        migrations.AddIndex(
            model_name='usersession',
            index=models.Index(fields=['user', 'is_active'], name='user_sessio_user_id_bb1b83_idx'),
        ),
        migrations.AddIndex(
            model_name='usersession',
            index=models.Index(fields=['expires_at'], name='user_sessio_expires_66ae96_idx'),
        ),
        migrations.AddIndex(
            model_name='usersession',
            index=models.Index(fields=['pharmaceutical_tenant', 'is_active'], name='user_sessio_pharmac_36e831_idx'),
        ),
        migrations.AddIndex(
            model_name='researchconsent',
            index=models.Index(fields=['pharmaceutical_tenant', 'study_identifier'], name='research_co_pharmac_5e811c_idx'),
        ),
        migrations.AddIndex(
            model_name='researchconsent',
            index=models.Index(fields=['user', 'consented'], name='research_co_user_id_9301ad_idx'),
        ),
        migrations.AddIndex(
            model_name='researchconsent',
            index=models.Index(fields=['consent_date'], name='research_co_consent_f088a2_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='researchconsent',
            unique_together={('user', 'pharmaceutical_tenant', 'study_identifier', 'consent_type')},
        ),
        migrations.AddIndex(
            model_name='refreshtoken',
            index=models.Index(fields=['user', 'is_revoked'], name='refresh_tok_user_id_893d6c_idx'),
        ),
        migrations.AddIndex(
            model_name='refreshtoken',
            index=models.Index(fields=['expires_at'], name='refresh_tok_expires_a128d9_idx'),
        ),
        migrations.AddIndex(
            model_name='refreshtoken',
            index=models.Index(fields=['token_hash'], name='refresh_tok_token_h_2fa7c6_idx'),
        ),
        migrations.AddIndex(
            model_name='audittrail',
            index=models.Index(fields=['timestamp'], name='audit_trail_timesta_8639ee_idx'),
        ),
        migrations.AddIndex(
            model_name='audittrail',
            index=models.Index(fields=['user', 'timestamp'], name='audit_trail_user_id_bda44d_idx'),
        ),
        migrations.AddIndex(
            model_name='audittrail',
            index=models.Index(fields=['pharmaceutical_tenant', 'timestamp'], name='audit_trail_pharmac_bfbb71_idx'),
        ),
        migrations.AddIndex(
            model_name='audittrail',
            index=models.Index(fields=['action_type', 'timestamp'], name='audit_trail_action__174cf3_idx'),
        ),
        migrations.AddIndex(
            model_name='audittrail',
            index=models.Index(fields=['study_identifier'], name='audit_trail_study_i_e16eb5_idx'),
        ),
        migrations.AddIndex(
            model_name='audittrail',
            index=models.Index(fields=['risk_level'], name='audit_trail_risk_le_aa07e9_idx'),
        ),
    ]
