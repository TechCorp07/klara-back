# Generated by Django 4.2.7 on 2025-07-22 04:48

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CommunityAccessibilitySetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('high_contrast', models.BooleanField(default=False)),
                ('large_text', models.BooleanField(default=False)),
                ('reduce_animations', models.BooleanField(default=False)),
                ('screen_reader_optimized', models.BooleanField(default=False)),
                ('simplified_ui', models.BooleanField(default=False)),
                ('notification_method', models.CharField(choices=[('visual', 'Visual Only'), ('audio', 'Audio Only'), ('both', 'Visual and Audio'), ('email', 'Email Only'), ('sms', 'SMS Only')], default='visual', max_length=20)),
                ('speech_to_text', models.BooleanField(default=False)),
                ('cognitive_support', models.BooleanField(default=False)),
                ('motor_support', models.BooleanField(default=False)),
                ('filter_sensitive_content', models.BooleanField(default=False)),
                ('filter_specific_conditions', models.JSONField(blank=True, default=list)),
                ('show_unread_first', models.BooleanField(default=True)),
                ('auto_play_media', models.BooleanField(default=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Accessibility Setting',
                'verbose_name_plural': 'Accessibility Settings',
            },
        ),
        migrations.CreateModel(
            name='CommunityComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('published', 'Published'), ('hidden', 'Hidden'), ('flagged', 'Flagged for Review')], default='published', max_length=20)),
                ('like_count', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Community Comment',
                'verbose_name_plural': 'Community Comments',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='CommunityEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('timezone', models.CharField(default='UTC', max_length=50)),
                ('location_type', models.CharField(choices=[('online', 'Online'), ('in_person', 'In Person'), ('hybrid', 'Hybrid')], default='online', max_length=20)),
                ('location_details', models.TextField(blank=True)),
                ('meeting_url', models.URLField(blank=True)),
                ('meeting_id', models.CharField(blank=True, max_length=255)),
                ('meeting_password', models.CharField(blank=True, max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('cancelled', 'Cancelled'), ('postponed', 'Postponed'), ('completed', 'Completed')], default='scheduled', max_length=20)),
                ('max_attendees', models.IntegerField(blank=True, null=True)),
                ('current_attendees', models.IntegerField(default=0)),
                ('image_url', models.URLField(blank=True)),
            ],
            options={
                'verbose_name': 'Community Event',
                'verbose_name_plural': 'Community Events',
                'ordering': ['start_time'],
            },
        ),
        migrations.CreateModel(
            name='CommunityGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the community group', max_length=255)),
                ('description', models.TextField(help_text='Description of the community group')),
                ('group_type', models.CharField(choices=[('support', 'Support Group'), ('discussion', 'Discussion Group'), ('research', 'Research Group'), ('education', 'Educational Group'), ('social', 'Social Group'), ('other', 'Other')], default='support', help_text='Type of community group', max_length=50)),
                ('is_private', models.BooleanField(default=False)),
                ('is_moderated', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('member_count', models.IntegerField(default=0)),
                ('post_count', models.IntegerField(default=0)),
                ('image_url', models.URLField(blank=True)),
                ('is_condition_specific', models.BooleanField(default=False)),
                ('condition_name', models.CharField(blank=True, max_length=255)),
                ('has_medical_professional', models.BooleanField(default=False)),
                ('is_peer_support', models.BooleanField(default=True)),
                ('phi_warning_enabled', models.BooleanField(default=True)),
                ('medical_disclaimer_text', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Community Group',
                'verbose_name_plural': 'Community Groups',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CommunityMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('member', 'Member'), ('moderator', 'Moderator'), ('admin', 'Administrator'), ('expert', 'Expert')], default='member', max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending Approval'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('blocked', 'Blocked')], default='approved', max_length=20)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('last_active_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Community Membership',
                'verbose_name_plural': 'Community Memberships',
                'ordering': ['-joined_at'],
            },
        ),
        migrations.CreateModel(
            name='CommunityNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('notification_type', models.CharField(choices=[('group_invitation', 'Group Invitation'), ('post_mention', 'Post Mention'), ('comment_mention', 'Comment Mention'), ('new_comment', 'New Comment'), ('event_reminder', 'Event Reminder'), ('post_in_group', 'New Post in Group'), ('membership_approval', 'Membership Approval'), ('content_flagged', 'Content Flagged'), ('resource_shared', 'Resource Shared'), ('medical_update', 'Medical Update'), ('expert_response', 'Expert Response'), ('medication_question', 'Medication Question'), ('clinical_trial', 'Clinical Trial Opportunity'), ('condition_update', 'Condition Information Update'), ('provider_post', 'Healthcare Provider Post')], default='group_invitation', max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('is_read', models.BooleanField(default=False)),
                ('delivery_method', models.CharField(choices=[('in_app', 'In-App Notification'), ('email', 'Email Notification'), ('sms', 'SMS Notification'), ('all', 'All Methods')], default='in_app', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', max_length=10)),
            ],
            options={
                'verbose_name': 'Community Notification',
                'verbose_name_plural': 'Community Notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CommunityPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('archived', 'Archived'), ('hidden', 'Hidden'), ('flagged', 'Flagged for Review')], default='published', max_length=20)),
                ('view_count', models.IntegerField(default=0)),
                ('like_count', models.IntegerField(default=0)),
                ('comment_count', models.IntegerField(default=0)),
                ('is_question', models.BooleanField(default=False)),
                ('is_expert_response', models.BooleanField(default=False)),
                ('expert_verified', models.BooleanField(default=False)),
                ('medical_disclaimer', models.BooleanField(default=True)),
                ('contains_sensitive_content', models.BooleanField(default=False)),
                ('requires_content_warning', models.BooleanField(default=False)),
                ('content_warning_text', models.CharField(blank=True, max_length=255)),
                ('post_type', models.CharField(choices=[('discussion', 'Discussion'), ('question', 'Question'), ('announcement', 'Announcement'), ('event', 'Event'), ('resource', 'Resource'), ('other', 'Other')], default='discussion', max_length=20)),
                ('tags', models.JSONField(blank=True, default=list)),
            ],
            options={
                'verbose_name': 'Community Post',
                'verbose_name_plural': 'Community Posts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CommunityResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('view_count', models.IntegerField(default=0)),
                ('download_count', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Community Resource',
                'verbose_name_plural': 'Community Resources',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EventAttendee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('registered', 'Registered'), ('confirmed', 'Confirmed'), ('attended', 'Attended'), ('cancelled', 'Cancelled'), ('waitlisted', 'Waitlisted')], default='registered', max_length=20)),
                ('registered_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Event Attendee',
                'verbose_name_plural': 'Event Attendees',
                'ordering': ['registered_at'],
            },
        ),
        migrations.CreateModel(
            name='HealthTopicTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_condition', models.BooleanField(default=False)),
                ('is_treatment', models.BooleanField(default=False)),
                ('is_medication', models.BooleanField(default=False)),
                ('is_lifestyle', models.BooleanField(default=False)),
                ('icd10_code', models.CharField(blank=True, max_length=10)),
                ('is_expert_verified', models.BooleanField(default=False)),
                ('group_count', models.IntegerField(default=0)),
                ('post_count', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Health Topic Tag',
                'verbose_name_plural': 'Health Topic Tags',
                'ordering': ['name'],
            },
        ),
    ]
