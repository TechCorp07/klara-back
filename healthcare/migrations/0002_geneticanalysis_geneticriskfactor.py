# Generated by Django 4.2.7 on 2025-07-25 11:55

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('healthcare', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='GeneticAnalysis',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('analysis_date', models.DateTimeField(auto_now_add=True)),
                ('version', models.CharField(default='1.0', max_length=10)),
                ('algorithm_version', models.CharField(default='v2024.1', max_length=20)),
                ('total_relatives_analyzed', models.PositiveIntegerField(default=0)),
                ('affected_relatives_count', models.PositiveIntegerField(default=0)),
                ('generations_analyzed', models.PositiveIntegerField(default=0)),
                ('overall_risk_score', models.PositiveIntegerField(help_text='Overall genetic risk score (0-100)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('rare_disease_risk', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('oncological_risk', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('neurological_risk', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('cardiac_risk', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('risk_factors', models.JSONField(default=list, help_text='List of identified genetic risk factors')),
                ('rare_diseases_found', models.JSONField(default=list, help_text='List of rare diseases found in family history')),
                ('inheritance_patterns', models.JSONField(default=dict, help_text='Identified inheritance patterns')),
                ('genetic_testing_recommendations', models.JSONField(default=list)),
                ('screening_recommendations', models.JSONField(default=list)),
                ('lifestyle_recommendations', models.JSONField(default=list)),
                ('counseling_recommended', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('reviewed', 'Reviewed by Provider'), ('archived', 'Archived')], default='completed', max_length=20)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('provider_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('medical_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='genetic_analyses', to='healthcare.medicalrecord')),
                ('patient', models.ForeignKey(limit_choices_to={'role': 'patient'}, on_delete=django.db.models.deletion.CASCADE, related_name='genetic_analyses', to=settings.AUTH_USER_MODEL)),
                ('reviewed_by', models.ForeignKey(blank=True, limit_choices_to={'role': 'provider'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_genetic_analyses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Genetic Analysis',
                'verbose_name_plural': 'Genetic Analyses',
                'db_table': 'genetic_analyses',
                'ordering': ['-analysis_date'],
            },
        ),
        migrations.CreateModel(
            name='GeneticRiskFactor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('condition', models.CharField(help_text='Medical condition name', max_length=255)),
                ('risk_level', models.CharField(choices=[('low', 'Low'), ('moderate', 'Moderate'), ('high', 'High'), ('very_high', 'Very High')], max_length=20)),
                ('family_history_count', models.PositiveIntegerField(help_text='Number of family members with this condition')),
                ('affected_relationships', models.JSONField(default=list, help_text='List of family relationships affected')),
                ('inheritance_pattern', models.CharField(choices=[('autosomal_dominant', 'Autosomal Dominant'), ('autosomal_recessive', 'Autosomal Recessive'), ('x_linked', 'X-Linked'), ('mitochondrial', 'Mitochondrial'), ('complex', 'Complex/Multifactorial'), ('unknown', 'Unknown')], default='unknown', max_length=50)),
                ('age_of_onset_range', models.CharField(blank=True, help_text='Typical age range for condition onset', max_length=50)),
                ('prevention_recommendations', models.JSONField(default=list)),
                ('screening_recommendations', models.JSONField(default=list)),
                ('relevant_genes', models.JSONField(default=list, help_text='List of genes associated with this condition')),
                ('testing_available', models.BooleanField(default=False)),
                ('testing_recommended', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('analysis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='identified_risk_factors', to='healthcare.geneticanalysis')),
            ],
            options={
                'db_table': 'genetic_risk_factors',
                'ordering': ['-risk_level', 'condition'],
                'unique_together': {('analysis', 'condition')},
            },
        ),
    ]
